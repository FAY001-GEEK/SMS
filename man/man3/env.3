.TH "env" 3 "Sat Dec 28 2019" "Version 1.2.0" "SMS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
env
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBrun_migrations_offline\fP ()"
.br
.ti -1c
.RI "def \fBrun_migrations_online\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBconfig\fP = context\&.config"
.br
.ti -1c
.RI "\fBlogger\fP = logging\&.getLogger('alembic\&.env')"
.br
.ti -1c
.RI "\fBtarget_metadata\fP = current_app\&.extensions['migrate']\&.db\&.metadata"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "def env\&.run_migrations_offline ()"

.PP
.nf
Run migrations in 'offline' mode.

This configures the context with just a URL
and not an Engine, though an Engine is acceptable
here as well.  By skipping the Engine creation
we don't even need a DBAPI to be available.

Calls to context.execute() here emit the given string to the
script output.
.fi
.PP
 
.PP
Definition at line 36 of file env\&.py\&.
.SS "def env\&.run_migrations_online ()"

.PP
.nf
Run migrations in 'online' mode.

In this scenario we need to create an Engine
and associate a connection with the context.
.fi
.PP
 
.PP
Definition at line 57 of file env\&.py\&.
.SH "Variable Documentation"
.PP 
.SS "env\&.config = context\&.config"

.PP
Definition at line 13 of file env\&.py\&.
.SS "env\&.logger = logging\&.getLogger('alembic\&.env')"

.PP
Definition at line 18 of file env\&.py\&.
.SS "env\&.target_metadata = current_app\&.extensions['migrate']\&.db\&.metadata"

.PP
Definition at line 28 of file env\&.py\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for SMS from the source code\&.
